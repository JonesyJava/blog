(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{507:function(t,e,a){"use strict";a.r(e);var r=a(2),o=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"day-20-week-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day-20-week-5"}},[t._v("#")]),t._v(" Day 20 - Week 5")]),t._v(" "),a("h2",{attrs:{id:"intro-to-node-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#intro-to-node-js"}},[t._v("#")]),t._v(" Intro to Node.js")]),t._v(" "),a("p",[t._v("Today we started learning about Auth0 and the differences between Authentication and Authorization. We were introduced to Tokens and why these are important in the accessibility of a user and a creator. This afternoon we started planning for our first Hack-a-thon on Friday. We were given a structure of what is expected, which also will help us stay on the course of getting an application to work at the end of our Hack-a-thon.")]),t._v(" "),a("h2",{attrs:{id:"what-is-a-virtual-property"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-a-virtual-property"}},[t._v("#")]),t._v(" What is a virtual property?")]),t._v(" "),a("p",[t._v("Virtuals are an additional field given for a model. Their values can be set manually or automatically with defined functionality. A common virtual property is the full name of a person, composed of first and last. Virtual properties do not persist within the database and are only existing logically, not written to the documents collection.")]),t._v(" "),a("h2",{attrs:{id:"when-might-you-use-a-virtual-property"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#when-might-you-use-a-virtual-property"}},[t._v("#")]),t._v(" When might you use a virtual property?")]),t._v(" "),a("p",[t._v("Virtual property allows the Entity Framework to create a proxy around the virtual property so that the property can support lazy loading and more efficient change tracking.")]),t._v(" "),a("h2",{attrs:{id:"how-do-you-search-by-a-virtual-properties-value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-do-you-search-by-a-virtual-properties-value"}},[t._v("#")]),t._v(" How do you search by a virtual properties value?")]),t._v(" "),a("p",[t._v("A GET method can be used as a function to return the virtual value. With the GET function you can perform complex processing or just concatenate single document fields. After utilizing a GET function, we can then utilize a SET function, which will be useful in splitting strings or do other operations.")]),t._v(" "),a("h2",{attrs:{id:"afternoon-project"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#afternoon-project"}},[t._v("#")]),t._v(" Afternoon Project")]),t._v(" "),a("ul",[a("li",[t._v("[My Github](No Afternoon Project - Planning with Team for Hack-a-thon)")])])])}),[],!1,null,null,null);e.default=o.exports}}]);