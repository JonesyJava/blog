(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{478:function(e,t,a){"use strict";a.r(t);var r=a(2),o=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"day-33-week-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day-33-week-10"}},[e._v("#")]),e._v(" Day 33 - Week 10")]),e._v(" "),a("h2",{attrs:{id:"c-sharp-intro"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-sharp-intro"}},[e._v("#")]),e._v(" C-Sharp Intro")]),e._v(" "),a("h2",{attrs:{id:"what-are-the-three-categories-of-data-types-how-are-they-different"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-are-the-three-categories-of-data-types-how-are-they-different"}},[e._v("#")]),e._v(" What are the three categories of data types? How are they different?")]),e._v(" "),a("p",[e._v("Int is an integer (whole number)\nChar is a character commonly used within a VARCHAR form which sets a limitation to the character quantity\nBool is a boolean setting true and false")]),e._v(" "),a("h2",{attrs:{id:"what-are-the-value-type-data-types-what-differences-do-you-notice-from-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-are-the-value-type-data-types-what-differences-do-you-notice-from-javascript"}},[e._v("#")]),e._v(" What are the Value-type data types? What differences do you notice from JavaScript?")]),e._v(" "),a("p",[e._v("Bool, Byte, Char, Decimal, Double, Enum, Float, Int are the value types. The biggest differences I have noticed from my experience with JS is that C# is very literal. C# is straight forward in its writing style and not very difficult to read back quickly. I've also noticed there is not a lot of leeway in the processing either. The code will either run or break.")]),e._v(" "),a("h2",{attrs:{id:"in-your-own-words-how-do-reference-types-get-stored-in-memory-how-does-this-differ-from-value-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#in-your-own-words-how-do-reference-types-get-stored-in-memory-how-does-this-differ-from-value-types"}},[e._v("#")]),e._v(" In your own words how do Reference types get stored in memory? How does this differ from Value types?")]),e._v(" "),a("p",[e._v("The heap is where Reference types are stored which means there is a larger space for their use. Contrary to the heap, Value types are stored in the stack and are alloted a single space of memory.")])])}),[],!1,null,null,null);t.default=o.exports}}]);